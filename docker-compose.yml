# Use root/example as user/password credentials
services:
    # (this is just an example, not intended to be a production configuration)
  db:
    image: mysql
    restart: always
    volumes:
      - ./UserService/db/init:/docker-entrypoint-initdb.d
      - db-data:/var/lib/mysql
    networks:
      - mercli-network
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
  notifications:
    restart: unless-stopped
    container_name: NotificationsService
    build:
      context: ./NotificationsService
      dockerfile: deploy/Dockerfile
    # allocate as many volumes as necessary, if needed.
    volumes:
      - ./NotificationsService/storage/app:/var/www/html/storage/app
    environment:
      APP_NAME: ${APP_NAME_NOTIFICATIONS}
      APP_ENV: ${APP_ENV_NOTIFICATIONS}
      APP_DEBUG: ${APP_DEBUG_NOTIFICATIONS}
      APP_KEY: ${APP_KEY_NOTIFICATIONS}
      APP_URL: ${APP_URL_NOTIFICATIONS}
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      MAIL_MAILER: ${MAIL_MAILER_NOTIFICATIONS}
      MAIL_HOST: ${MAIL_HOST_NOTIFICATIONS}
      MAIL_PORT: ${MAIL_PORT_NOTIFICATIONS}
      MAIL_USERNAME: ${MAIL_USERNAME_NOTIFICATIONS}
      MAIL_PASSWORD: ${MAIL_PASSWORD_NOTIFICATIONS}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION_NOTIFICATIONS}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS_NOTIFICATIONS}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME_NOTIFICATIONS}
    ports:
      - "8080:8000"
    networks:
      - mercli-network
    depends_on:
      - db
  payment:
    restart: unless-stopped
    container_name: PaymentService
    build:
      context: ./PaymentService
      dockerfile: deploy/Dockerfile
    # allocate as many volumes as necessary, if needed.
    volumes:
      - ./PaymentService/storage/app:/var/www/html/storage/app
    environment:
      APP_NAME: ${APP_NAME_PAYMENT}
      APP_ENV: ${APP_ENV_PAYMENT}
      APP_DEBUG: ${APP_DEBUG_PAYMENT}
      APP_KEY: ${APP_KEY_PAYMENT}
      APP_URL: ${APP_URL_PAYMENT}
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      MAIL_MAILER: ${MAIL_MAILER_PAYMENT}
      MAIL_HOST: ${MAIL_HOST_PAYMENT}
      MAIL_PORT: ${MAIL_PORT_PAYMENT}
      MAIL_USERNAME: ${MAIL_USERNAME_PAYMENT}
      MAIL_PASSWORD: ${MAIL_PASSWORD_PAYMENT}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION_PAYMENT}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS_PAYMENT}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME_PAYMENT}
    ports:
      - "8081:81"
    networks:
      - mercli-network
    depends_on:
      - db
  product-service:
    container_name: product-service
    build: ./product-service
    ports:
      - "8082:8081"
    depends_on:
      - cart-service
    networks:
      - mercli-network

  cart-service:
    container_name: cart-service
    build: ./cart-service
    ports:
      - "8083:8082"
    networks:
      - mercli-network

  user-service-app:
    container_name: user-service-app
    build: ./UserService
    depends_on:
      - db
    links:
      - db
    ports:
      - "3000:3000"
    networks:
      - mercli-network

  frontend:
    container_name: frontend-service
    build: ./FrontService
    ports:
      - "5173:5173"
    environment:
      - VITE_Cart__service_url=http://localhost:8082
    depends_on:
      - cart-service
      - product-service
    networks:
      - mercli-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - mercli-network
    depends_on:
      - cart-service
      - product-service

volumes:
  db-data:

networks:
  mercli-network:
    driver: bridge